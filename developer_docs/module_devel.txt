Module Creation
Each module generally has a long name (eg, One-way Anova) and a shorter acronym, (OWA). The module is generally referred to by this short acronym, and the acronym is used as the algorithm class name and its package name. Generally, the class name for the main Algorithm implementation should be all caps, (OWA.java) whereas the packages should be lowercase (org.tigr.microarray.mev.cluster.algorithm.impl.owa.* and org.tigr.microarray.mev.cluster.gui.owa.*)

Algorithm:
source\org\tigr\microarray\mev\cluster\algorithm\impl\**.java

GUI files:
source\org\tigr\microarray\mev\cluster\gui\impl
(included are all GUI components for the module, e.g. expression viewers, tables, init dialogs and **GUI.java)

Parameters info:
source\org\tigr\microarray\mev\cluster\gui\impl\dialogs\dialogHelpUtil\dialogHelpPages\**_parameters.html

Add key to 
source\org\tigr\microarray\mev\cluster\gui\impl\dialogs\dialogHelpUtil\HelpWindow.java


build_script:
	1.) Change Module Selection Properties by adding:
	    <property name="**" value="y"/>

	2.) Add algorithm dependency by adding algorithm name to:
		<target name="algorithm-modules"
		depends=
	and
		<target name="modules-only"
		depends=
	-note: With new toolbar layout, target order is no longer essential for correct categorizing of modules.

	3.) Add build target for algorithm: 
		(example)
    <target name="**" depends="**-GUI" if="**">
        <javac debug="${debug}" target="${java.target.version}" sourcepath="" srcdir="${alg.impl.dir}" destdir="${dest.dir}">
            <include name="**.java"/>
            <classpath>
                <pathelement location="${lib.dir}/JSciCore.jar"/>

                <!-- jars to support module compilation -->
                <pathelement location="${lib.dir}/mev-util.jar"/>
                <pathelement location="${lib.dir}/mev-gui-impl.jar"/>
                <pathelement location="${lib.dir}/mev-gui-support.jar"/>
                <pathelement location="${lib.dir}/mev-algorithm-impl.jar"/>
                <pathelement location="${lib.dir}/mev-algorithm-support.jar"/>
                <pathelement location="${lib.dir}/mev-base.jar"/>            
            </classpath>
	  </javac>
	  <propertyfile file="${alg.properties.file}">
            <entry key="**" value="org.tigr.microarray.mev.cluster.algorithm.impl.**"/>
        </propertyfile>
    </target>


	4.) Add build target for GUI
		(example)
	<target name="**-GUI">
		<javac debug="${debug}" target="${java.target.version}" srcdir="${gui.impl.dir}/**" destdir="${dest.dir}">
			<classpath refid="module.build.class.path"/>
 	</javac>
 	<propertyfile file="${gui.properties.file}">
 	  <entry key="gui.names" value="**:" operation="+"/>
 	    <entry key="**.name" value="**"/>
  	    <entry key="**.class" value="org.tigr.microarray.mev.cluster.gui.impl.**.**GUI"/>
	  <entry key="**.category" value="${STATISTICS}"/> 
	  <entry key="**.smallIcon" value="analysis16.gif"/>
	    <entry key="**.largeIcon" value="**_button.gif"/>
	    <entry key="**.tooltip" value="Example Algorithm"/>
	  </propertyfile>
	</target>

Add icon button gif to
source\org\tigr\microarray\mev\cluster\gui\impl\images
and
source\org\tigr\images

button icon is a gif 32 pixels x 32 pixels

State-saving

If the module uses only the standard viewers to display its results, no state-saving work need be done. If the module includes custom viewers, however, please consult the state-saving documentation for information on how to ensure that the new viewer will save and load completely.

Documentation

There should be a section of the MeV user manual for each module. It should describe what the module does and how to use it. Include plenty of screenshots. 

If there is a paper reference for the module, add it to the MeV manual in the References section at the end and in the manual section devoted to the module. Also add the reference to the MeV page on the TM4 website. Also write a short description of the module to be included in the release notes when the new module is released with MeV.  