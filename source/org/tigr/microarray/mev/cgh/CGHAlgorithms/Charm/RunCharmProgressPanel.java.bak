package org.tigr.microarray.mev.cgh.CGHAlgorithms.Charm;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.awt.*;
import java.awt.event.*;

import javax.swing.*;
import javax.swing.border.BevelBorder;

import org.tigr.microarray.mev.cluster.gui.impl.GUIFactory;
import org.tigr.microarray.mev.cluster.gui.impl.dialogs.Progress.FillPanel;

public class RunCharmProgressPanel extends JFrame implements ActionListener {

	    private JProgressBar progressBar;
//	    private JButton cancelButton;
	    //MultipleArrayViewer mav;
	    JPanel progressPanel;
	    
	    public RunCharmProgressPanel() {
		setTitle("Running ChARM...");    
		progressPanel = new JPanel(new BorderLayout());
		progressPanel.setPreferredSize(new Dimension(350, 80));
            
	        progressBar = new JProgressBar(0, 100);
	        //progressBar.setValue(0);
		    progressBar.setString("");
	        progressBar.setStringPainted(true);
		
	        progressBar.setPreferredSize(new Dimension(310, 30));
                 

	        progressPanel.add(progressBar, BorderLayout.PAGE_START);
	        progressPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
		setContentPane(progressPanel);

	        progressPanel.setOpaque(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		pack(); 
		setVisible(true);
	    }
	    
	     public void setIndeterminate(boolean b){
	    	progressBar.setIndeterminate(b);
	    }
	    
	    public void actionPerformed(ActionEvent evt) {
	    	String command = evt.getActionCommand();
            if (command.equals("cancel")) {
    			//mav.cancelLoadState();
    			setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    			progressBar.setIndeterminate(true);
            }
	    }
	    
	    /**
	     * Creates a panel with cancel button.
	     */
	    private JPanel createBtnsPanel(ActionListener listener) {
	        JPanel panel = new JPanel(new BorderLayout());
	        JButton cancelButton = new JButton("Cancel");
	        cancelButton.setBorder(javax.swing.BorderFactory.createBevelBorder(BevelBorder.RAISED, new Color(240,240,240), new Color(180,180,180), new Color(10,0,0), new Color(10,10,10) ));
	        cancelButton.setPreferredSize(new Dimension(80,25));
	        cancelButton.setActionCommand("cancel-command");
	        cancelButton.addActionListener(listener);
	        cancelButton.setFocusPainted(false);
	        panel.add(cancelButton, BorderLayout.CENTER);
	        getRootPane().setDefaultButton(cancelButton);
	        return panel;
	    }
	    
	    public class HeaderImagePanel extends JPanel{
	        
	        public HeaderImagePanel(){
	            setLayout(new GridBagLayout());
	            JLabel iconLabel = new JLabel(GUIFactory.getIcon("dialog_banner2.gif"));
	            iconLabel.setOpaque(false);
	            iconLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);
	            FillPanel fillPanel = new FillPanel();
	            fillPanel.setBackground(Color.blue);
	            add(iconLabel, new GridBagConstraints(0,0,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(0,5,0,0),0,0));
	            add(fillPanel, new GridBagConstraints(1,0,1,1,1.0,0.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
	       }
	    }
	    
	    public class FillPanel extends JPanel{
	        GradientPaint gp;
	        Color backgroundColor = new Color(25,25,169);
	        Color fadeColor = new Color(140,220,240);
	        
	        public void paint(Graphics g){
	            super.paint(g);
	            Graphics2D g2 = (Graphics2D)g;
	            Dimension dim = this.getSize();
	            //                gp = new GradientPaint(dim.width/2,0,backgroundColor,dim.width/2,dim.height/2,fadeColor);
	            gp = new GradientPaint(0,dim.height/2,backgroundColor,dim.width,dim.height/2,fadeColor);
	            g2.setPaint(gp);
	            g2.fillRect(0,0,dim.width, dim.height);
	            g2.setColor(Color.black);
	        }
	    }
	}    
